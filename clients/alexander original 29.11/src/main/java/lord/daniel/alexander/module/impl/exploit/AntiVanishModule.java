package lord.daniel.alexander.module.impl.exploit;

import io.github.nevalackin.homoBus.Listener;
import io.github.nevalackin.homoBus.annotations.EventLink;
import lord.daniel.alexander.Modification;
import lord.daniel.alexander.event.impl.game.PacketEvent;
import lord.daniel.alexander.module.abstracts.AbstractModule;
import lord.daniel.alexander.module.data.ModuleData;
import lord.daniel.alexander.module.enums.EnumModuleType;
import net.minecraft.client.network.NetworkPlayerInfo;
import net.minecraft.event.ClickEvent;
import net.minecraft.network.Packet;
import net.minecraft.network.play.server.S38PacketPlayerListItem;
import net.minecraft.util.ChatComponentText;

import java.util.*;
import java.util.concurrent.CopyOnWriteArrayList;

/**
 * Written by 'Daniel.' for Alexander client.
 * Please don't use the code.
 *
 * @author Daniel.
 */
@ModuleData(name = "AntiVanish", enumModuleType = EnumModuleType.EXPLOIT)
public class AntiVanishModule extends AbstractModule {

    public final HashMap<UUID, String> vanished = new HashMap<>();
    public final List<UUID> uuids = new ArrayList<>();
    public final CopyOnWriteArrayList<NetworkPlayerInfo> playerInfo = new CopyOnWriteArrayList<>();

    @EventLink
    public final Listener<PacketEvent> packetEventListener = packetEvent -> {
        final Packet<?> packet = packetEvent.getPacket();
        if (packet instanceof final S38PacketPlayerListItem s38PacketPlayerListItem) {
            if (s38PacketPlayerListItem.func_179768_b() == S38PacketPlayerListItem.Action.UPDATE_LATENCY)
                for (S38PacketPlayerListItem.AddPlayerData addPlayerData : s38PacketPlayerListItem.func_179767_a())
                    if (!mc.getNetHandler().playerInfoMap.containsKey(addPlayerData.getProfile().getId())) {
                        final ChatComponentText text = new ChatComponentText(Modification.PREFIX + "A player has vanished!");
                        text.getChatStyle().setChatClickEvent(new ClickEvent(ClickEvent.Action.OPEN_URL, "https://de.namemc.com/profile/" + addPlayerData.getProfile().getId().toString()));
                        try {
                            getPlayer().addChatMessage(text);
                        } catch (ConcurrentModificationException e) {
                            e.printStackTrace();
                        }
                    }
        }
    };

    @Override
    public void onEnable() {

    }

    @Override
    public void onDisable() {

    }
}
