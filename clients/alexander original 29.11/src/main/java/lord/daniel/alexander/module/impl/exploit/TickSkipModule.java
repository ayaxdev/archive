package lord.daniel.alexander.module.impl.exploit;

import io.github.nevalackin.homoBus.Listener;
import io.github.nevalackin.homoBus.annotations.EventLink;
import lord.daniel.alexander.event.impl.game.PreTickEvent;
import lord.daniel.alexander.event.impl.game.RunTickEvent;
import lord.daniel.alexander.module.abstracts.AbstractModule;
import lord.daniel.alexander.module.data.ModuleData;
import lord.daniel.alexander.module.enums.EnumModuleType;
import lord.daniel.alexander.settings.impl.number.NumberValue;

/**
 * Written by Daniel. on 11/11/2023
 * Please don't use this code without my permission.
 *
 * @author Daniel.
 */
@ModuleData(name = "TickSkip", categories = {EnumModuleType.EXPLOIT, EnumModuleType.TICKBASE})
public class TickSkipModule extends AbstractModule {

    private final NumberValue<Integer> freezeTicks = new NumberValue<>("FreezeTicks", this, 4, 0, 60);
    private final NumberValue<Integer> teleportTicks = new NumberValue<>("TeleportTicks", this, 4, 0, 60);

    int counter = 0;

    @EventLink
    public final Listener<PreTickEvent> preTickEventListener = preTickEvent -> {
        if(counter < (freezeTicks.getValue() - 1)) {
            preTickEvent.setCancelled(true);
        } else {
            mc.timer.elapsedTicks += teleportTicks.getValue();
            this.setEnabled(false);
        }
        counter++;
    };

    @Override
    public void onEnable() {
        counter = 0;
    }

    @Override
    public void onDisable() {

    }
}
