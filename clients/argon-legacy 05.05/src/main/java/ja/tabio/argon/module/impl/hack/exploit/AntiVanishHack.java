package ja.tabio.argon.module.impl.hack.exploit;

import io.github.racoondog.norbit.EventHandler;
import ja.tabio.argon.Argon;
import ja.tabio.argon.event.impl.ProcessPacketEvent;
import ja.tabio.argon.module.Module;
import ja.tabio.argon.module.annotation.HackData;
import ja.tabio.argon.module.annotation.ModuleData;
import ja.tabio.argon.module.enums.HackCategory;
import ja.tabio.argon.module.enums.ModuleCategory;
import ja.tabio.argon.utils.player.ChatUtil;
import net.minecraft.client.network.NetworkPlayerInfo;
import net.minecraft.event.ClickEvent;
import net.minecraft.network.play.server.S38PacketPlayerListItem;
import net.minecraft.util.ChatComponentText;

import java.util.*;
import java.util.concurrent.CopyOnWriteArrayList;

@ModuleData(name = "AntiVanish", category = ModuleCategory.HACK)
@HackData(hackCategory = HackCategory.EXPLOIT)
public class AntiVanishHack extends Module {

    public final HashMap<UUID, String> vanished = new HashMap<>();
    public final List<UUID> uuids = new ArrayList<>();
    public final CopyOnWriteArrayList<NetworkPlayerInfo> playerInfo = new CopyOnWriteArrayList<>();

    @EventHandler
    public final void onPacket(final ProcessPacketEvent packetEvent) {
        if (packetEvent.packet instanceof final S38PacketPlayerListItem s38PacketPlayerListItem) {
            if (s38PacketPlayerListItem.getAction() == S38PacketPlayerListItem.Action.UPDATE_LATENCY)
                for (S38PacketPlayerListItem.AddPlayerData addPlayerData : s38PacketPlayerListItem.getEntries())
                    if (!mc.getNetHandler().playerInfoMap.containsKey(addPlayerData.getProfile().getId())) {
                        final ChatComponentText text = new ChatComponentText(ChatUtil.PREFIX + "A player is vanished!");
                        text.getChatStyle().setChatClickEvent(new ClickEvent(ClickEvent.Action.OPEN_URL, "https://de.namemc.com/profile/" + addPlayerData.getProfile().getId().toString()));
                        try {
                            mc.thePlayer.addChatMessage(text);
                        } catch (ConcurrentModificationException e) {
                            Argon.getInstance().logger.error("Failed to send chat message", e);
                        }
                    }
        }
    }

}
